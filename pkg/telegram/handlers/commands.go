package handlers

import (
	"kaijuVpn/pkg/database/users"
	"strconv"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func HandleCommand(command string) (func(*tgbotapi.BotAPI, tgbotapi.Update), error) {
	commands := map[string]func(*tgbotapi.BotAPI, tgbotapi.Update){
		"hello":    handleHello,
		"set_name": setName,
		"start":    startHandler,
	}
	if checker, ok := commands[command]; ok {
		return checker, nil
	}

	return defaultHandler, nil
}

func handleHello(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Hello Get!")
	bot.Send(msg)
}

func setName(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "SET_NAME COMMAND")
	bot.Send(msg)
}

func defaultHandler(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "DEFAULT HANDLER")
	bot.Send(msg)
}

func startHandler(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	var telegram_user = update.Message.From
	var user = users.User{
		Telegram_id: strconv.FormatInt(telegram_user.ID, 10),
	}
	users.CreateIfNotExist(user)

	var numericKeyboard = tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–û–ø–ª–∞—Ç–∏—Ç—åüí∞", "agree_purscase"),
			tgbotapi.NewInlineKeyboardButtonData("–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å vpnüí°", "noCallback"),
		),
	)
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Kaiju VPN. –î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É \"–û–ø–ª–∞—Ç–∏—Ç—å\" –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.")
	msg.ReplyMarkup = numericKeyboard
	bot.Send(msg)
}
